// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dad_jokes.proto

/*
Package DadJoke is a generated protocol buffer package.

It is generated from these files:
	dad_jokes.proto

It has these top-level messages:
	DadJokeRequest
	DadJokeResponse
*/
package DadJoke

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DadJokeRequest struct {
	Keyword string `protobuf:"bytes,1,opt,name=keyword" json:"keyword,omitempty"`
}

func (m *DadJokeRequest) Reset()                    { *m = DadJokeRequest{} }
func (m *DadJokeRequest) String() string            { return proto.CompactTextString(m) }
func (*DadJokeRequest) ProtoMessage()               {}
func (*DadJokeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DadJokeRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type DadJokeResponse struct {
	Joke string `protobuf:"bytes,1,opt,name=joke" json:"joke,omitempty"`
}

func (m *DadJokeResponse) Reset()                    { *m = DadJokeResponse{} }
func (m *DadJokeResponse) String() string            { return proto.CompactTextString(m) }
func (*DadJokeResponse) ProtoMessage()               {}
func (*DadJokeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DadJokeResponse) GetJoke() string {
	if m != nil {
		return m.Joke
	}
	return ""
}

func init() {
	proto.RegisterType((*DadJokeRequest)(nil), "DadJoke.DadJokeRequest")
	proto.RegisterType((*DadJokeResponse)(nil), "DadJoke.DadJokeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DadJoke service

type DadJokeClient interface {
	GetDadJoke(ctx context.Context, in *DadJokeRequest, opts ...grpc.CallOption) (*DadJokeResponse, error)
}

type dadJokeClient struct {
	cc *grpc.ClientConn
}

func NewDadJokeClient(cc *grpc.ClientConn) DadJokeClient {
	return &dadJokeClient{cc}
}

func (c *dadJokeClient) GetDadJoke(ctx context.Context, in *DadJokeRequest, opts ...grpc.CallOption) (*DadJokeResponse, error) {
	out := new(DadJokeResponse)
	err := grpc.Invoke(ctx, "/DadJoke.DadJoke/GetDadJoke", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DadJoke service

type DadJokeServer interface {
	GetDadJoke(context.Context, *DadJokeRequest) (*DadJokeResponse, error)
}

func RegisterDadJokeServer(s *grpc.Server, srv DadJokeServer) {
	s.RegisterService(&_DadJoke_serviceDesc, srv)
}

func _DadJoke_GetDadJoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DadJokeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadJokeServer).GetDadJoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DadJoke.DadJoke/GetDadJoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadJokeServer).GetDadJoke(ctx, req.(*DadJokeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DadJoke_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DadJoke.DadJoke",
	HandlerType: (*DadJokeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDadJoke",
			Handler:    _DadJoke_GetDadJoke_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dad_jokes.proto",
}

func init() { proto.RegisterFile("dad_jokes.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x49, 0x4c, 0x89,
	0xcf, 0xca, 0xcf, 0x4e, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x77, 0x49, 0x4c,
	0xf1, 0xca, 0xcf, 0x4e, 0x55, 0xd2, 0xe2, 0xe2, 0x83, 0x32, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b,
	0x4b, 0x84, 0x24, 0xb8, 0xd8, 0xb3, 0x53, 0x2b, 0xcb, 0xf3, 0x8b, 0x52, 0x24, 0x18, 0x15, 0x18,
	0x35, 0x38, 0x83, 0x60, 0x5c, 0x25, 0x55, 0x2e, 0x7e, 0xb8, 0xda, 0xe2, 0x82, 0xfc, 0xbc, 0xe2,
	0x54, 0x21, 0x21, 0x2e, 0x16, 0x90, 0xb1, 0x50, 0x95, 0x60, 0xb6, 0x91, 0x0f, 0x17, 0xcc, 0x74,
	0x21, 0x47, 0x2e, 0x2e, 0xf7, 0xd4, 0x12, 0x18, 0x4f, 0x5c, 0x0f, 0xca, 0xd2, 0x43, 0xb5, 0x52,
	0x4a, 0x02, 0x53, 0x02, 0x62, 0xbe, 0x12, 0x43, 0x12, 0x1b, 0xd8, 0xc1, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x13, 0x64, 0x87, 0xbb, 0xc3, 0x00, 0x00, 0x00,
}
